// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LeftDrawerMenu renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Memo(LeftDrawerMenu)
    opened={true}
  >
    <WithStyles(ForwardRef(Drawer))
      anchor="left"
      className="makeStyles-drawer-1 makeStyles-drawerOpened-2"
      classes={
        Object {
          "paper": "makeStyles-drawerOpened-2",
        }
      }
      open={true}
      variant="permanent"
    >
      <ForwardRef(Drawer)
        anchor="left"
        className="makeStyles-drawer-1 makeStyles-drawerOpened-2"
        classes={
          Object {
            "docked": "MuiDrawer-docked",
            "modal": "MuiDrawer-modal",
            "paper": "MuiDrawer-paper makeStyles-drawerOpened-2",
            "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
            "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
            "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
            "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
            "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
            "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
            "paperAnchorRight": "MuiDrawer-paperAnchorRight",
            "paperAnchorTop": "MuiDrawer-paperAnchorTop",
            "root": "MuiDrawer-root",
          }
        }
        open={true}
        variant="permanent"
      >
        <div
          className="MuiDrawer-root MuiDrawer-docked makeStyles-drawer-1 makeStyles-drawerOpened-2"
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiDrawer-paper makeStyles-drawerOpened-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
            elevation={0}
            square={true}
          >
            <ForwardRef(Paper)
              className="MuiDrawer-paper makeStyles-drawerOpened-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              elevation={0}
              square={true}
            >
              <div
                className="MuiPaper-root MuiDrawer-paper makeStyles-drawerOpened-2 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
              >
                <WithStyles(ForwardRef(List))>
                  <ForwardRef(List)
                    classes={
                      Object {
                        "dense": "MuiList-dense",
                        "padding": "MuiList-padding",
                        "root": "MuiList-root",
                        "subheader": "MuiList-subheader",
                      }
                    }
                  >
                    <ul
                      className="MuiList-root MuiList-padding"
                    >
                      <Memo(DrawerListItem)
                        action={[Function]}
                        expanded={false}
                        icon={<UNDEFINED />}
                        id="add-elements"
                        key="add-elements"
                        label="Add Element"
                        subItems={
                          Array [
                            Object {
                              "action": [Function],
                              "icon": <UNDEFINED />,
                              "id": "module",
                              "label": "E/X",
                            },
                            Object {
                              "action": [Function],
                              "icon": <UNDEFINED />,
                              "id": "roof-plane",
                              "label": "Roof Plane",
                            },
                            Object {
                              "action": [Function],
                              "icon": <UNDEFINED />,
                              "id": "setback",
                              "label": "Setback",
                            },
                            Object {
                              "action": [Function],
                              "icon": <UNDEFINED />,
                              "id": "circular-obstruction",
                              "label": "Circular Obstruction",
                            },
                            Object {
                              "action": [Function],
                              "icon": <UNDEFINED />,
                              "id": "rectangular-obstruction",
                              "label": "Rectangular Obstruction",
                            },
                          ]
                        }
                      >
                        <WithStyles(ForwardRef(ListItem))
                          button={true}
                          className=""
                          classes={
                            Object {
                              "selected": "makeStyles-selectedWithSubList-50",
                            }
                          }
                          onClick={[Function]}
                          selected={false}
                        >
                          <ForwardRef(ListItem)
                            button={true}
                            className=""
                            classes={
                              Object {
                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                "button": "MuiListItem-button",
                                "container": "MuiListItem-container",
                                "dense": "MuiListItem-dense",
                                "disabled": "Mui-disabled",
                                "divider": "MuiListItem-divider",
                                "focusVisible": "Mui-focusVisible",
                                "gutters": "MuiListItem-gutters",
                                "root": "MuiListItem-root",
                                "secondaryAction": "MuiListItem-secondaryAction",
                                "selected": "Mui-selected makeStyles-selectedWithSubList-50",
                              }
                            }
                            onClick={[Function]}
                            selected={false}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              component="div"
                              disabled={false}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <div
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                          "root": "MuiListItemIcon-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemIcon-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Add Element"
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "MuiListItemText-dense",
                                          "inset": "MuiListItemText-inset",
                                          "multiline": "MuiListItemText-multiline",
                                          "primary": "MuiListItemText-primary",
                                          "root": "MuiListItemText-root",
                                          "secondary": "MuiListItemText-secondary",
                                        }
                                      }
                                      primary="Add Element"
                                    >
                                      <div
                                        className="MuiListItemText-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiListItemText-primary"
                                          component="span"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiListItemText-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="span"
                                            variant="body1"
                                          >
                                            <span
                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                            >
                                              Add Element
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </div>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(ListItem)>
                        </WithStyles(ForwardRef(ListItem))>
                        <WithStyles(ForwardRef(Collapse))
                          className="makeStyles-subList-49"
                          in={false}
                          timeout="auto"
                          unmountOnExit={true}
                        >
                          <ForwardRef(Collapse)
                            className="makeStyles-subList-49"
                            classes={
                              Object {
                                "container": "MuiCollapse-container",
                                "entered": "MuiCollapse-entered",
                                "hidden": "MuiCollapse-hidden",
                                "wrapper": "MuiCollapse-wrapper",
                                "wrapperInner": "MuiCollapse-wrapperInner",
                              }
                            }
                            in={false}
                            timeout="auto"
                            unmountOnExit={true}
                          >
                            <Transition
                              addEndListener={[Function]}
                              appear={false}
                              enter={true}
                              exit={true}
                              in={false}
                              mountOnEnter={false}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={null}
                              unmountOnExit={true}
                            />
                          </ForwardRef(Collapse)>
                        </WithStyles(ForwardRef(Collapse))>
                      </Memo(DrawerListItem)>
                    </ul>
                  </ForwardRef(List)>
                </WithStyles(ForwardRef(List))>
                <Memo(DxfUpload)>
                  <form
                    className="makeStyles-form-117"
                  >
                    <input
                      className="makeStyles-uploadInput-118"
                      id="dxf-upload-input"
                      onChange={[Function]}
                      type="file"
                    />
                    <WithStyles(ForwardRef(Grid))
                      container={true}
                      spacing={2}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        container={true}
                        spacing={2}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                        >
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <WithStyles(ForwardRef(FormControl))
                                  fullWidth={true}
                                >
                                  <ForwardRef(FormControl)
                                    classes={
                                      Object {
                                        "fullWidth": "MuiFormControl-fullWidth",
                                        "marginDense": "MuiFormControl-marginDense",
                                        "marginNormal": "MuiFormControl-marginNormal",
                                        "root": "MuiFormControl-root",
                                      }
                                    }
                                    fullWidth={true}
                                  >
                                    <div
                                      className="MuiFormControl-root MuiFormControl-fullWidth"
                                    >
                                      <WithStyles(ForwardRef(InputLabel))
                                        htmlFor="module-spec-select"
                                      >
                                        <ForwardRef(InputLabel)
                                          classes={
                                            Object {
                                              "animated": "MuiInputLabel-animated",
                                              "asterisk": "MuiInputLabel-asterisk",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "filled": "MuiInputLabel-filled",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInputLabel-formControl",
                                              "marginDense": "MuiInputLabel-marginDense",
                                              "outlined": "MuiInputLabel-outlined",
                                              "required": "Mui-required",
                                              "root": "MuiInputLabel-root",
                                              "shrink": "MuiInputLabel-shrink",
                                            }
                                          }
                                          htmlFor="module-spec-select"
                                        >
                                          <WithStyles(ForwardRef(FormLabel))
                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                            classes={
                                              Object {
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "required": "Mui-required",
                                              }
                                            }
                                            data-shrink={false}
                                            htmlFor="module-spec-select"
                                          >
                                            <ForwardRef(FormLabel)
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "filled": "MuiFormLabel-filled",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "required": "Mui-required Mui-required",
                                                  "root": "MuiFormLabel-root",
                                                }
                                              }
                                              data-shrink={false}
                                              htmlFor="module-spec-select"
                                            >
                                              <label
                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                data-shrink={false}
                                                htmlFor="module-spec-select"
                                              >
                                                Module Spec
                                              </label>
                                            </ForwardRef(FormLabel)>
                                          </WithStyles(ForwardRef(FormLabel))>
                                        </ForwardRef(InputLabel)>
                                      </WithStyles(ForwardRef(InputLabel))>
                                      <WithStyles(ForwardRef(Select))
                                        fullWidth={true}
                                        inputProps={
                                          Object {
                                            "id": "module-spec-select",
                                            "name": "module-spec",
                                          }
                                        }
                                        labelWidth={0}
                                        native={true}
                                        onChange={[Function]}
                                        value=""
                                      >
                                        <ForwardRef(Select)
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiSelect-filled",
                                              "icon": "MuiSelect-icon",
                                              "iconFilled": "MuiSelect-iconFilled",
                                              "iconOpen": "MuiSelect-iconOpen",
                                              "iconOutlined": "MuiSelect-iconOutlined",
                                              "outlined": "MuiSelect-outlined",
                                              "root": "MuiSelect-root",
                                              "select": "MuiSelect-select",
                                              "selectMenu": "MuiSelect-selectMenu",
                                            }
                                          }
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "id": "module-spec-select",
                                              "name": "module-spec",
                                            }
                                          }
                                          labelWidth={0}
                                          native={true}
                                          onChange={[Function]}
                                          value=""
                                        >
                                          <WithStyles(ForwardRef(Input))
                                            fullWidth={true}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "disabled": [Function],
                                                  "inputRef": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onChange": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "displayName": "ArrowDropDownIcon",
                                                  "muiName": "SvgIcon",
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "children": Array [
                                                  <option
                                                    value=""
                                                  />,
                                                  Array [
                                                    <option
                                                      value="X22-370-D-AC"
                                                    >
                                                      X22-370-D-AC
                                                    </option>,
                                                  ],
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                },
                                                "id": "module-spec-select",
                                                "multiple": false,
                                                "name": "module-spec",
                                                "type": undefined,
                                                "variant": "standard",
                                              }
                                            }
                                            onChange={[Function]}
                                            value=""
                                          >
                                            <ForwardRef(Input)
                                              classes={
                                                Object {
                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "formControl": "MuiInput-formControl",
                                                  "fullWidth": "MuiInput-fullWidth",
                                                  "input": "MuiInput-input",
                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInput-marginDense",
                                                  "multiline": "MuiInput-multiline",
                                                  "root": "MuiInput-root",
                                                  "underline": "MuiInput-underline",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "displayName": "ArrowDropDownIcon",
                                                    "muiName": "SvgIcon",
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      value=""
                                                    />,
                                                    Array [
                                                      <option
                                                        value="X22-370-D-AC"
                                                      >
                                                        X22-370-D-AC
                                                      </option>,
                                                    ],
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "id": "module-spec-select",
                                                  "multiple": false,
                                                  "name": "module-spec",
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value=""
                                            >
                                              <WithStyles(ForwardRef(InputBase))
                                                classes={
                                                  Object {
                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInput-formControl",
                                                    "fullWidth": "MuiInput-fullWidth",
                                                    "input": "MuiInput-input",
                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                    "marginDense": "MuiInput-marginDense",
                                                    "multiline": "MuiInput-multiline",
                                                    "root": "MuiInput-root MuiInput-underline",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "disabled": [Function],
                                                      "inputRef": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onChange": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "displayName": "ArrowDropDownIcon",
                                                      "muiName": "SvgIcon",
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "children": Array [
                                                      <option
                                                        value=""
                                                      />,
                                                      Array [
                                                        <option
                                                          value="X22-370-D-AC"
                                                        >
                                                          X22-370-D-AC
                                                        </option>,
                                                      ],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "id": "module-spec-select",
                                                    "multiple": false,
                                                    "name": "module-spec",
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                multiline={false}
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <ForwardRef(InputBase)
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                      "disabled": "Mui-disabled Mui-disabled",
                                                      "error": "Mui-error Mui-error",
                                                      "focused": "Mui-focused Mui-focused",
                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                      "input": "MuiInputBase-input MuiInput-input",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  inputComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "IconComponent": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "classes": [Function],
                                                        "disabled": [Function],
                                                        "inputRef": [Function],
                                                        "multiple": [Function],
                                                        "name": [Function],
                                                        "onChange": [Function],
                                                        "value": [Function],
                                                        "variant": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  inputProps={
                                                    Object {
                                                      "IconComponent": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "displayName": "ArrowDropDownIcon",
                                                        "muiName": "SvgIcon",
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "children": Array [
                                                        <option
                                                          value=""
                                                        />,
                                                        Array [
                                                          <option
                                                            value="X22-370-D-AC"
                                                          >
                                                            X22-370-D-AC
                                                          </option>,
                                                        ],
                                                      ],
                                                      "classes": Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      },
                                                      "id": "module-spec-select",
                                                      "multiple": false,
                                                      "name": "module-spec",
                                                      "type": undefined,
                                                      "variant": "standard",
                                                    }
                                                  }
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <div
                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(NativeSelectInput)
                                                      IconComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.memo),
                                                          "compare": null,
                                                          "displayName": "ArrowDropDownIcon",
                                                          "muiName": "SvgIcon",
                                                          "type": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          },
                                                        }
                                                      }
                                                      aria-invalid={false}
                                                      className="MuiInputBase-input MuiInput-input"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        }
                                                      }
                                                      disabled={false}
                                                      id="module-spec-select"
                                                      inputRef={[Function]}
                                                      multiple={false}
                                                      name="module-spec"
                                                      onAnimationStart={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      value=""
                                                      variant="standard"
                                                    >
                                                      <select
                                                        aria-invalid={false}
                                                        className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input"
                                                        disabled={false}
                                                        id="module-spec-select"
                                                        multiple={false}
                                                        name="module-spec"
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        required={false}
                                                        value=""
                                                      >
                                                        <option
                                                          value=""
                                                        />
                                                        <option
                                                          key="X22-370-D-AC"
                                                          value="X22-370-D-AC"
                                                        >
                                                          X22-370-D-AC
                                                        </option>
                                                      </select>
                                                      <ForwardRef
                                                        className="MuiSelect-icon"
                                                      >
                                                        <WithStyles(ForwardRef(SvgIcon))
                                                          className="MuiSelect-icon"
                                                        >
                                                          <ForwardRef(SvgIcon)
                                                            className="MuiSelect-icon"
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              className="MuiSvgIcon-root MuiSelect-icon"
                                                              focusable="false"
                                                              role="presentation"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M7 10l5 5 5-5z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef>
                                                    </ForwardRef(NativeSelectInput)>
                                                  </div>
                                                </ForwardRef(InputBase)>
                                              </WithStyles(ForwardRef(InputBase))>
                                            </ForwardRef(Input)>
                                          </WithStyles(ForwardRef(Input))>
                                        </ForwardRef(Select)>
                                      </WithStyles(ForwardRef(Select))>
                                    </div>
                                  </ForwardRef(FormControl)>
                                </WithStyles(ForwardRef(FormControl))>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                          <WithStyles(ForwardRef(Grid))
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              item={true}
                              xs={12}
                            >
                              <div
                                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                              >
                                <label
                                  htmlFor="dxf-upload-input"
                                >
                                  <WithStyles(ForwardRef(Button))
                                    color="primary"
                                    component="span"
                                    fullWidth={true}
                                    startIcon={<UNDEFINED />}
                                    variant="contained"
                                  >
                                    <ForwardRef(Button)
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit",
                                          "contained": "MuiButton-contained",
                                          "containedPrimary": "MuiButton-containedPrimary",
                                          "containedSecondary": "MuiButton-containedSecondary",
                                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                                          "disableElevation": "MuiButton-disableElevation",
                                          "disabled": "Mui-disabled",
                                          "endIcon": "MuiButton-endIcon",
                                          "focusVisible": "Mui-focusVisible",
                                          "fullWidth": "MuiButton-fullWidth",
                                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                                          "label": "MuiButton-label",
                                          "outlined": "MuiButton-outlined",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                          "root": "MuiButton-root",
                                          "sizeLarge": "MuiButton-sizeLarge",
                                          "sizeSmall": "MuiButton-sizeSmall",
                                          "startIcon": "MuiButton-startIcon",
                                          "text": "MuiButton-text",
                                          "textPrimary": "MuiButton-textPrimary",
                                          "textSecondary": "MuiButton-textSecondary",
                                          "textSizeLarge": "MuiButton-textSizeLarge",
                                          "textSizeSmall": "MuiButton-textSizeSmall",
                                        }
                                      }
                                      color="primary"
                                      component="span"
                                      fullWidth={true}
                                      startIcon={<UNDEFINED />}
                                      variant="contained"
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                        component="span"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        type="button"
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="span"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          type="button"
                                        >
                                          <span
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              <span
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                              >
                                                <ForwardRef>
                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                    <ForwardRef(SvgIcon)
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="MuiSvgIcon-root"
                                                        focusable="false"
                                                        role="presentation"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef>
                                              </span>
                                              DXF Upload
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </span>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(Button)>
                                  </WithStyles(ForwardRef(Button))>
                                </label>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                  </form>
                </Memo(DxfUpload)>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </div>
      </ForwardRef(Drawer)>
    </WithStyles(ForwardRef(Drawer))>
  </Memo(LeftDrawerMenu)>
</Provider>
`;
