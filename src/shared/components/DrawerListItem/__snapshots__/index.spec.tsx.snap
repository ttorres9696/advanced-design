// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DrawerListItem renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Memo(DrawerListItem)
    action={[Function]}
    expanded={true}
    icon={<UNDEFINED />}
    id="elements"
    label="Elements"
    locked={false}
    parentId=""
    subItems={
      Array [
        Object {
          "action": [Function],
          "icon": <UNDEFINED />,
          "id": "tree",
          "label": "Tree",
          "locked": false,
          "parentId": "elements",
          "visible": true,
        },
      ]
    }
    visible={true}
  >
    <WithStyles(ForwardRef(ListItem))
      button={true}
      className=""
      classes={
        Object {
          "selected": "makeStyles-selectedWithSubList-3",
        }
      }
      onClick={[Function]}
      selected={false}
    >
      <ForwardRef(ListItem)
        button={true}
        className=""
        classes={
          Object {
            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
            "button": "MuiListItem-button",
            "container": "MuiListItem-container",
            "dense": "MuiListItem-dense",
            "disabled": "Mui-disabled",
            "divider": "MuiListItem-divider",
            "focusVisible": "Mui-focusVisible",
            "gutters": "MuiListItem-gutters",
            "root": "MuiListItem-root",
            "secondaryAction": "MuiListItem-secondaryAction",
            "selected": "Mui-selected makeStyles-selectedWithSubList-3",
          }
        }
        onClick={[Function]}
        selected={false}
      >
        <WithStyles(ForwardRef(ButtonBase))
          className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
          component="div"
          disabled={false}
          focusVisibleClassName="Mui-focusVisible"
          onClick={[Function]}
        >
          <ForwardRef(ButtonBase)
            className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
            classes={
              Object {
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "root": "MuiButtonBase-root",
              }
            }
            component="div"
            disabled={false}
            focusVisibleClassName="Mui-focusVisible"
            onClick={[Function]}
          >
            <div
              aria-disabled={false}
              className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
              onBlur={[Function]}
              onClick={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              role="button"
              tabIndex={0}
            >
              <WithStyles(ForwardRef(ListItemIcon))
                key=".0"
              >
                <ForwardRef(ListItemIcon)
                  classes={
                    Object {
                      "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                      "root": "MuiListItemIcon-root",
                    }
                  }
                >
                  <div
                    className="MuiListItemIcon-root"
                  >
                    <ForwardRef>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef>
                  </div>
                </ForwardRef(ListItemIcon)>
              </WithStyles(ForwardRef(ListItemIcon))>
              <WithStyles(ForwardRef(ListItemText))
                key=".1"
                primary="Elements"
              >
                <ForwardRef(ListItemText)
                  classes={
                    Object {
                      "dense": "MuiListItemText-dense",
                      "inset": "MuiListItemText-inset",
                      "multiline": "MuiListItemText-multiline",
                      "primary": "MuiListItemText-primary",
                      "root": "MuiListItemText-root",
                      "secondary": "MuiListItemText-secondary",
                    }
                  }
                  primary="Elements"
                >
                  <div
                    className="MuiListItemText-root"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="MuiListItemText-primary"
                      component="span"
                      variant="body1"
                    >
                      <ForwardRef(Typography)
                        className="MuiListItemText-primary"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                        variant="body1"
                      >
                        <span
                          className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                        >
                          Elements
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </div>
                </ForwardRef(ListItemText)>
              </WithStyles(ForwardRef(ListItemText))>
              <ForwardRef>
                <WithStyles(ForwardRef(SvgIcon))>
                  <ForwardRef(SvgIcon)
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction",
                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                        "colorError": "MuiSvgIcon-colorError",
                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                        "root": "MuiSvgIcon-root",
                      }
                    }
                  >
                    <svg
                      aria-hidden="true"
                      className="MuiSvgIcon-root"
                      focusable="false"
                      role="presentation"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </WithStyles(ForwardRef(SvgIcon))>
              </ForwardRef>
              <WithStyles(ForwardRef(IconButton))
                key=".3"
                onClick={[Function]}
              >
                <ForwardRef(IconButton)
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  onClick={[Function]}
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    centerRipple={true}
                    className="MuiIconButton-root"
                    disabled={false}
                    focusRipple={true}
                    onClick={[Function]}
                  >
                    <ForwardRef(ButtonBase)
                      centerRipple={true}
                      className="MuiIconButton-root"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disabled={false}
                      focusRipple={true}
                      onClick={[Function]}
                    >
                      <button
                        className="MuiButtonBase-root MuiIconButton-root"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <ForwardRef>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                        <NoSsr>
                          <WithStyles(undefined)
                            center={true}
                          >
                            <ForwardRef(TouchRipple)
                              center={true}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(undefined)>
                        </NoSsr>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
              <WithStyles(ForwardRef(IconButton))
                disabled={false}
                key=".4"
                onClick={[Function]}
              >
                <ForwardRef(IconButton)
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  disabled={false}
                  onClick={[Function]}
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    centerRipple={true}
                    className="MuiIconButton-root"
                    disabled={false}
                    focusRipple={true}
                    onClick={[Function]}
                  >
                    <ForwardRef(ButtonBase)
                      centerRipple={true}
                      className="MuiIconButton-root"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disabled={false}
                      focusRipple={true}
                      onClick={[Function]}
                    >
                      <button
                        className="MuiButtonBase-root MuiIconButton-root"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <ForwardRef>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                        <NoSsr>
                          <WithStyles(undefined)
                            center={true}
                          >
                            <ForwardRef(TouchRipple)
                              center={true}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(undefined)>
                        </NoSsr>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
              <NoSsr>
                <WithStyles(undefined)
                  center={false}
                >
                  <ForwardRef(TouchRipple)
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child",
                        "childLeaving": "MuiTouchRipple-childLeaving",
                        "childPulsate": "MuiTouchRipple-childPulsate",
                        "ripple": "MuiTouchRipple-ripple",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                        "root": "MuiTouchRipple-root",
                      }
                    }
                  >
                    <span
                      className="MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </ForwardRef(TouchRipple)>
                </WithStyles(undefined)>
              </NoSsr>
            </div>
          </ForwardRef(ButtonBase)>
        </WithStyles(ForwardRef(ButtonBase))>
      </ForwardRef(ListItem)>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(Collapse))
      className="makeStyles-subList-2"
      in={true}
      timeout="auto"
      unmountOnExit={true}
    >
      <ForwardRef(Collapse)
        className="makeStyles-subList-2"
        classes={
          Object {
            "container": "MuiCollapse-container",
            "entered": "MuiCollapse-entered",
            "hidden": "MuiCollapse-hidden",
            "wrapper": "MuiCollapse-wrapper",
            "wrapperInner": "MuiCollapse-wrapperInner",
          }
        }
        in={true}
        timeout="auto"
        unmountOnExit={true}
      >
        <Transition
          addEndListener={[Function]}
          appear={false}
          enter={true}
          exit={true}
          in={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={null}
          unmountOnExit={true}
        >
          <div
            className="MuiCollapse-container makeStyles-subList-2 MuiCollapse-entered"
            style={
              Object {
                "minHeight": "0px",
              }
            }
          >
            <div
              className="MuiCollapse-wrapper"
            >
              <div
                className="MuiCollapse-wrapperInner"
              >
                <WithStyles(ForwardRef(List))
                  component="div"
                  disablePadding={true}
                >
                  <ForwardRef(List)
                    classes={
                      Object {
                        "dense": "MuiList-dense",
                        "padding": "MuiList-padding",
                        "root": "MuiList-root",
                        "subheader": "MuiList-subheader",
                      }
                    }
                    component="div"
                    disablePadding={true}
                  >
                    <div
                      className="MuiList-root"
                    >
                      <DrawerListItem
                        action={[Function]}
                        icon={<UNDEFINED />}
                        id="tree"
                        isSubItem={true}
                        key="tree"
                        label="Tree"
                        locked={false}
                        parentId="elements"
                        visible={true}
                      >
                        <WithStyles(ForwardRef(ListItem))
                          button={true}
                          className="makeStyles-subItem-1"
                          classes={
                            Object {
                              "selected": "",
                            }
                          }
                          onClick={[Function]}
                          selected={false}
                        >
                          <ForwardRef(ListItem)
                            button={true}
                            className="makeStyles-subItem-1"
                            classes={
                              Object {
                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                "button": "MuiListItem-button",
                                "container": "MuiListItem-container",
                                "dense": "MuiListItem-dense",
                                "disabled": "Mui-disabled",
                                "divider": "MuiListItem-divider",
                                "focusVisible": "Mui-focusVisible",
                                "gutters": "MuiListItem-gutters",
                                "root": "MuiListItem-root",
                                "secondaryAction": "MuiListItem-secondaryAction",
                                "selected": "Mui-selected",
                              }
                            }
                            onClick={[Function]}
                            selected={false}
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              className="MuiListItem-root makeStyles-subItem-1 MuiListItem-gutters MuiListItem-button"
                              component="div"
                              disabled={false}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                            >
                              <ForwardRef(ButtonBase)
                                className="MuiListItem-root makeStyles-subItem-1 MuiListItem-gutters MuiListItem-button"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <div
                                  aria-disabled={false}
                                  className="MuiButtonBase-root MuiListItem-root makeStyles-subItem-1 MuiListItem-gutters MuiListItem-button"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <WithStyles(ForwardRef(ListItemIcon))
                                    key=".0"
                                  >
                                    <ForwardRef(ListItemIcon)
                                      classes={
                                        Object {
                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                          "root": "MuiListItemIcon-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiListItemIcon-root"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M13 16.12c3.47-.41 6.17-3.36 6.17-6.95 0-3.87-3.13-7-7-7s-7 3.13-7 7c0 3.47 2.52 6.34 5.83 6.89V20H5v2h14v-2h-6v-3.88z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </div>
                                    </ForwardRef(ListItemIcon)>
                                  </WithStyles(ForwardRef(ListItemIcon))>
                                  <WithStyles(ForwardRef(ListItemText))
                                    key=".1"
                                    primary="Tree"
                                  >
                                    <ForwardRef(ListItemText)
                                      classes={
                                        Object {
                                          "dense": "MuiListItemText-dense",
                                          "inset": "MuiListItemText-inset",
                                          "multiline": "MuiListItemText-multiline",
                                          "primary": "MuiListItemText-primary",
                                          "root": "MuiListItemText-root",
                                          "secondary": "MuiListItemText-secondary",
                                        }
                                      }
                                      primary="Tree"
                                    >
                                      <div
                                        className="MuiListItemText-root"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiListItemText-primary"
                                          component="span"
                                          variant="body1"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiListItemText-primary"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            component="span"
                                            variant="body1"
                                          >
                                            <span
                                              className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                            >
                                              Tree
                                            </span>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(ListItemText)>
                                  </WithStyles(ForwardRef(ListItemText))>
                                  <WithStyles(ForwardRef(IconButton))
                                    key=".3"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(IconButton))
                                    disabled={false}
                                    key=".4"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </div>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(ListItem)>
                        </WithStyles(ForwardRef(ListItem))>
                      </DrawerListItem>
                    </div>
                  </ForwardRef(List)>
                </WithStyles(ForwardRef(List))>
              </div>
            </div>
          </div>
        </Transition>
      </ForwardRef(Collapse)>
    </WithStyles(ForwardRef(Collapse))>
  </Memo(DrawerListItem)>
</Provider>
`;
